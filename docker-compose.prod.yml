version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    expose:
      - "3000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  db:
    image: postgres:16-alpine
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always
      
  caddy:
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
    environment:
      - CADDY_DOMAIN=${PROD_CADDY_DOMAIN}
    volumes:
      - "caddy-data:/data/caddy"
      - ./caddy/Caddyfile.prod:/etc/caddy/Caddyfile
    restart: always

  adminer:
    image: wodby/adminer:latest
    expose:
      - "9000"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: always

volumes:
  postgres_data:
    driver: local
  caddy-data:
    driver: local

networks:
  app-network:
    driver: bridge 